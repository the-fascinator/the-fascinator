<script type='text/javascript' src='//ajax.aspnetcdn.com/ajax/knockout/knockout-2.2.1.js'></script>
<div id="$tableName" data-bind="stopBindings: true">
<table>
    <thead>
    	<tr>
    	#foreach( $column in $columns )
        <th>#displayMessage($column.get("columnHeader"))</th>#end
        <th>Actions</th>
        </tr>
        
    </thead>
    <tbody data-bind="foreach: rows">
        <tr>
        	#foreach( $column in $columns )
        		<td data-bind="text: $column.get("propertyName")"/>#end
            <td><a href="#" data-bind="click: function () {${editFunction}(this)}">Edit</a> <a href="#" data-bind="click: $parent.remove">Remove</a> </td>
        </tr>
    </tbody>
</table>
<button class="addButton" onclick='$addFunction(); $(this).hide()'>$addButtonText</button>
</div>

<script>
startupCompleteListeners.push("$initialiseMethodName");

function $initialiseMethodName() {
	var rows = [];
	for(key in jaffa.serverData) {
		var prefix = "$metadataPrefix";
		 if(key.indexOf(prefix+".") == 0) {
		 	var suffix = key.substring(prefix.length+1, key.length); 
		 	var index = suffix.substring(0, suffix.indexOf("."));
		 	var ending = suffix.substring(suffix.indexOf(".")+1,suffix.length);
		 	
		 	if(rows[index-1] == null) {
		 		rows[index-1] = new Object();
		 		rows[index-1]["modelIdentifier"] = guid();
		 	}
		 	rows[index-1][ending] = jaffa.serverData[key];
		 }
	}
	
	for(var i =0; i<rows.length; i++) {
		${modelName}.rows.push(rows[i]);
	}
	
	${modelName}.rows.subscribe(function(rowArray) {
    	//delete all the old values out of serverData as some might have been deleted in the table
    	for(key in jaffa.serverData) {
			 var prefix = "$metadataPrefix";
		 if(key.indexOf(prefix+".") == 0) {
		 	delete jaffa.serverData[key];
		 }
	    }
    		for(var i =1; i<=rowArray.length; i++) {
    			var row = rowArray[i-1];
    			for(key in row) {
    			  if(key != "modelIdentifier") {
    			  	jaffa.serverData["$metadataPrefix."+i+"."+key] = row[key];
    			  }
    			}
    		}
		});
}

function $modelName() {
    var self = this;
 
    self.rows = ko.observableArray([
    ]);

    self.remove = function() {
        self.rows.remove(this);
    }
    
   
}

function cancel${modelName}() {
	$("[id='$tableName']").find('.addButton').show();
}


function add${modelName}Row(model) {
	#foreach( $column in $columns )
		if(model['$column.get("propertyName")'] == undefined) {
			model['$column.get("propertyName")'] = null;
		}
	#end
    ${modelName}.rows.push(model);
    $("[id='$tableName']").find('.addButton').show();
}

function edit${modelName}Row(model) {
	 var count = 0;
	 ko.utils.arrayForEach(${modelName}.rows(), function(existingModel) {
       if(model.modelIdentifier == existingModel.modelIdentifier) {
       	${modelName}.rows.replace(existingModel, model);
       	return;
       }
       count++; 
    });
    $("[id='$tableName']").find('.addButton').show();   
}


    
var $modelName = new $modelName();
ko.applyBindings($modelName, $("[id='$tableName']")[0]);
</script>